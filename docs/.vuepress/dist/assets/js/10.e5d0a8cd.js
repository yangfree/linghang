(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{184:function(t,e,s){"use strict";s.r(e);var _=s(0),v=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"写给自己"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写给自己","aria-hidden":"true"}},[t._v("#")]),t._v(" 写给自己")]),t._v(" "),s("p",[t._v("一般项目分为数据层，业务层和界面层，前端负责的是界面层，但又不能仅仅停留在界面层。大前端的时代带来了很多机遇，但更大的是挑战和变化。")]),t._v(" "),s("p",[t._v("要做好一个前端，必须要掌握好基础，也就是别人口中说的三板斧。"),s("code",[t._v("Html")]),t._v("，"),s("code",[t._v("Css")]),t._v("，"),s("code",[t._v("JavaScript")]),t._v("，js固然重要，但是也不能忽略html和css，我见过太多前端css掌握的其实并不太好，但也没有要深入学习的意思，切记： "),s("strong",[t._v("不可有歧视之心")]),t._v("。")]),t._v(" "),s("p",[t._v("框架固然重要，但最重要的还是原生，要知其然知其所以然，要了解算法和设计模式，有精力的话尽可能的吃透。英语对于编程来说不是必须的，但很重要。")]),t._v(" "),s("p",[t._v("在前端如火如荼发展的时候，切莫为了新而去新，要脚踏实地的根据业务场景选择合适的技术。没有什么框架是最好的，也没有哪一门语言是最好的，只有在特殊场景下它是最合适的，不要做无谓之争，不要逞口舌之利。")]),t._v(" "),s("p",[t._v("不要因为出发太久而忘记最初的目的，不要迷失在层出不穷的框架和库中，可以多参考别人的思维和代码逻辑，可以当搬运工，也可以尝试着造轮子，但归根结底要有自己东西。")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Talk is cheap, Show me code.")])])])])}],!1,null,null,null);e.default=v.exports}}]);